package de.renew.minimap;

import CH.ifa.draw.DrawPlugin;

import CH.ifa.draw.util.CommandMenuItem;

import de.renew.minimap.command.ShowMiniMapCommand;

import de.renew.plugin.IPlugin;
import de.renew.plugin.PluginAdapter;
import de.renew.plugin.PluginException;
import de.renew.plugin.PluginManager;
import de.renew.plugin.PluginProperties;

import java.net.URL;

import java.util.Collection;

import javax.swing.JMenuItem;


/**
 * This is a generated file. Generated by PluginDevelopment
 * plugin (version 0.4)
 * Representative for the MiniMap plug-in.
 *
 * @author PluginGenerator
 */
public class MiniMapPlugin extends PluginAdapter {
    public static final String OPTIMIZE_MINI_MAP = "de.renew.minimap.optimize";
    JMenuItem cmi;

    public MiniMapPlugin(PluginProperties props) {
        super(props);
        //    registerClasses();
    }

    public MiniMapPlugin(URL url) throws PluginException {
        super(url);
        //    registerClasses();
    }

    public static MiniMapPlugin getCurrent() {
        MiniMapPlugin result = null;
        Collection<IPlugin> plugins = PluginManager.getInstance()
                                                   .getPluginsProviding("de.renew.minimap");
        for (IPlugin plugin : plugins) {
            if (plugin instanceof MiniMapPlugin) {
                result = (MiniMapPlugin) plugin;
                break;
            }
        }
        return result;
    }

    /*
     * (non-Javadoc)
     * @see de.renew.plugin.PluginAdapter#cleanup()
     */
    @Override
    public boolean cleanup() {
        super.cleanup();
        DrawPlugin current = DrawPlugin.getCurrent();
        if (current != null) {
            current.getMenuManager().unregisterMenu(cmi);
        }
        return true;
    }

    /* (non-Javadoc)
     * @see de.renew.plugin.PluginAdapter#init()
     */
    @Override
    public void init() {
        super.init();
        cmi = new CommandMenuItem(new ShowMiniMapCommand());
        DrawPlugin.getCurrent().getMenuManager()
                  .registerMenu(DrawPlugin.PLUGINS_MENU, cmi, "Show MiniMap");
        PluginManager.getInstance()
                     .addCLCommand("MiniMap", new ShowMiniMapCommand());

    }
}
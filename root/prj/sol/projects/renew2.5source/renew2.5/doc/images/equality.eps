%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 430 181
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Friday, June 10, 2016 4:33:54 PM CEST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
430 181 setpagesize
0 0 0 0 setmargins
0 0 setorigin
430 181 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
430.000 0.00000 l
430.000 181.000 l
0.00000 181.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
430.000 0.00000 l
430.000 181.000 l
0.00000 181.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -86.0000 -84.0000 ] concat
86 84 430 181 rc
.439216 .858824 .576471 RG
newpath
117.000 124.000 m
117.000 129.523 112.523 134.000 107.000 134.000  c
101.477 134.000 97.0000 129.523 97.0000 124.000  c
97.0000 118.477 101.477 114.000 107.000 114.000  c
112.523 114.000 117.000 118.477 117.000 124.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
117.000 124.000 m
117.000 129.523 112.523 134.000 107.000 134.000  c
101.477 134.000 97.0000 129.523 97.0000 124.000  c
97.0000 118.477 101.477 114.000 107.000 114.000  c
112.523 114.000 117.000 118.477 117.000 124.000  c
h
S
.439216 .858824 .576471 RG
newpath
179.000 124.000 m
179.000 129.523 174.523 134.000 169.000 134.000  c
163.477 134.000 159.000 129.523 159.000 124.000  c
159.000 118.477 163.477 114.000 169.000 114.000  c
174.523 114.000 179.000 118.477 179.000 124.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
179.000 124.000 m
179.000 129.523 174.523 134.000 169.000 134.000  c
163.477 134.000 159.000 129.523 159.000 124.000  c
159.000 118.477 163.477 114.000 169.000 114.000  c
174.523 114.000 179.000 118.477 179.000 124.000  c
h
S
.439216 .858824 .576471 RG
newpath
158.000 175.000 m
182.000 175.000 l
182.000 191.000 l
158.000 191.000 l
158.000 175.000 l
h
f
0.00000 0.00000 0.00000 RG
newpath
158.000 175.000 m
182.000 175.000 l
182.000 191.000 l
158.000 191.000 l
158.000 175.000 l
h
S
.439216 .858824 .576471 RG
0.00000 0.00000 0.00000 RG
newpath
114.000 131.000 m
114.000 131.000 l
161.000 175.000 l
S
newpath
161.000 175.000 m
158.000 168.000 l
156.000 170.000 l
154.000 173.000 l
h
f
newpath
161.000 175.000 m
158.000 168.000 l
156.000 170.000 l
154.000 173.000 l
h
S
.439216 .858824 .576471 RG
0.00000 0.00000 0.00000 RG
newpath
169.000 134.000 m
169.000 134.000 l
169.000 175.000 l
S
newpath
169.000 175.000 m
172.000 168.000 l
169.000 167.000 l
166.000 168.000 l
h
f
newpath
169.000 175.000 m
172.000 168.000 l
169.000 167.000 l
166.000 168.000 l
h
S
[ 1.00000 0.00000 0.00000 1.00000 121.000 145.000 ] concat
newpath
6.59375 5.43750 m
4.21875 8.62500 l
6.70312 12.0000 l
5.43750 12.0000 l
3.53125 9.42188 l
1.62500 12.0000 l
.343750 12.0000 l
2.89062 8.56250 l
.562500 5.43750 l
1.82812 5.43750 l
3.57812 7.78125 l
5.31250 5.43750 l
6.59375 5.43750 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -121.000 -145.000 ] concat
.439216 .858824 .576471 RG
newpath
239.000 125.000 m
239.000 130.523 234.523 135.000 229.000 135.000  c
223.477 135.000 219.000 130.523 219.000 125.000  c
219.000 119.477 223.477 115.000 229.000 115.000  c
234.523 115.000 239.000 119.477 239.000 125.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
239.000 125.000 m
239.000 130.523 234.523 135.000 229.000 135.000  c
223.477 135.000 219.000 130.523 219.000 125.000  c
219.000 119.477 223.477 115.000 229.000 115.000  c
234.523 115.000 239.000 119.477 239.000 125.000  c
h
S
.439216 .858824 .576471 RG
0.00000 0.00000 0.00000 RG
newpath
223.000 132.000 m
223.000 132.000 l
178.000 175.000 l
S
newpath
178.000 175.000 m
185.000 173.000 l
183.000 170.000 l
181.000 168.000 l
h
f
newpath
178.000 175.000 m
185.000 173.000 l
183.000 170.000 l
181.000 168.000 l
h
S
[ 1.00000 0.00000 0.00000 1.00000 175.000 145.000 ] concat
newpath
3.85938 12.6094 m
3.55729 13.3906 3.26042 13.9010 2.96875 14.1406  c
2.67708 14.3802 2.29167 14.5000 1.81250 14.5000  c
.953125 14.5000 l
.953125 13.5938 l
1.57812 13.5938 l
1.88021 13.5938 2.11198 13.5234 2.27344 13.3828  c
2.43490 13.2422 2.61458 12.9115 2.81250 12.3906  c
3.01562 11.8906 l
.359375 5.43750 l
1.50000 5.43750 l
3.54688 10.5625 l
5.60938 5.43750 l
6.75000 5.43750 l
3.85938 12.6094 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -175.000 -145.000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 208.000 145.000 ] concat
newpath
6.59375 5.43750 m
4.21875 8.62500 l
6.70312 12.0000 l
5.43750 12.0000 l
3.53125 9.42188 l
1.62500 12.0000 l
.343750 12.0000 l
2.89062 8.56250 l
.562500 5.43750 l
1.82812 5.43750 l
3.57812 7.78125 l
5.31250 5.43750 l
6.59375 5.43750 l
h
12.6172 4.46875 m
12.6172 7.73438 l
15.8828 7.73438 l
15.8828 8.73438 l
12.6172 8.73438 l
12.6172 12.0000 l
11.6328 12.0000 l
11.6328 8.73438 l
8.36719 8.73438 l
8.36719 7.73438 l
11.6328 7.73438 l
11.6328 4.46875 l
12.6172 4.46875 l
h
21.0156 12.6094 m
20.7135 13.3906 20.4167 13.9010 20.1250 14.1406  c
19.8333 14.3802 19.4479 14.5000 18.9688 14.5000  c
18.1094 14.5000 l
18.1094 13.5938 l
18.7344 13.5938 l
19.0365 13.5938 19.2682 13.5234 19.4297 13.3828  c
19.5911 13.2422 19.7708 12.9115 19.9688 12.3906  c
20.1719 11.8906 l
17.5156 5.43750 l
18.6562 5.43750 l
20.7031 10.5625 l
22.7656 5.43750 l
23.9062 5.43750 l
21.0156 12.6094 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -208.000 -145.000 ] concat
.439216 .858824 .576471 RG
newpath
117.000 242.000 m
117.000 247.523 112.523 252.000 107.000 252.000  c
101.477 252.000 97.0000 247.523 97.0000 242.000  c
97.0000 236.477 101.477 232.000 107.000 232.000  c
112.523 232.000 117.000 236.477 117.000 242.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
117.000 242.000 m
117.000 247.523 112.523 252.000 107.000 252.000  c
101.477 252.000 97.0000 247.523 97.0000 242.000  c
97.0000 236.477 101.477 232.000 107.000 232.000  c
112.523 232.000 117.000 236.477 117.000 242.000  c
h
S
.439216 .858824 .576471 RG
newpath
239.000 243.000 m
239.000 248.523 234.523 253.000 229.000 253.000  c
223.477 253.000 219.000 248.523 219.000 243.000  c
219.000 237.477 223.477 233.000 229.000 233.000  c
234.523 233.000 239.000 237.477 239.000 243.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
239.000 243.000 m
239.000 248.523 234.523 253.000 229.000 253.000  c
223.477 253.000 219.000 248.523 219.000 243.000  c
219.000 237.477 223.477 233.000 229.000 233.000  c
234.523 233.000 239.000 237.477 239.000 243.000  c
h
S
.439216 .858824 .576471 RG
newpath
179.000 242.000 m
179.000 247.523 174.523 252.000 169.000 252.000  c
163.477 252.000 159.000 247.523 159.000 242.000  c
159.000 236.477 163.477 232.000 169.000 232.000  c
174.523 232.000 179.000 236.477 179.000 242.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
179.000 242.000 m
179.000 247.523 174.523 252.000 169.000 252.000  c
163.477 252.000 159.000 247.523 159.000 242.000  c
159.000 236.477 163.477 232.000 169.000 232.000  c
174.523 232.000 179.000 236.477 179.000 242.000  c
h
S
.439216 .858824 .576471 RG
0.00000 0.00000 0.00000 RG
newpath
161.000 191.000 m
161.000 191.000 l
114.000 236.000 l
S
newpath
114.000 236.000 m
121.000 234.000 l
119.000 231.000 l
117.000 229.000 l
h
f
newpath
114.000 236.000 m
121.000 234.000 l
119.000 231.000 l
117.000 229.000 l
h
S
.439216 .858824 .576471 RG
0.00000 0.00000 0.00000 RG
newpath
169.000 191.000 m
169.000 191.000 l
169.000 233.000 l
S
newpath
169.000 233.000 m
172.000 226.000 l
169.000 225.000 l
166.000 226.000 l
h
f
newpath
169.000 233.000 m
172.000 226.000 l
169.000 225.000 l
166.000 226.000 l
h
S
.439216 .858824 .576471 RG
0.00000 0.00000 0.00000 RG
newpath
177.000 191.000 m
177.000 191.000 l
223.000 237.000 l
S
newpath
223.000 237.000 m
220.000 230.000 l
218.000 232.000 l
216.000 234.000 l
h
f
newpath
223.000 237.000 m
220.000 230.000 l
218.000 232.000 l
216.000 234.000 l
h
S
[ 1.00000 0.00000 0.00000 1.00000 96.0000 206.000 ] concat
newpath
2.29688 11.0000 m
6.43750 11.0000 l
6.43750 12.0000 l
.875000 12.0000 l
.875000 11.0000 l
1.32292 10.5417 1.93490 9.91927 2.71094 9.13281  c
3.48698 8.34635 3.97396 7.83854 4.17188 7.60938  c
4.55729 7.19271 4.82552 6.83594 4.97656 6.53906  c
5.12760 6.24219 5.20312 5.95312 5.20312 5.67188  c
5.20312 5.20312 5.03906 4.82292 4.71094 4.53125  c
4.38281 4.23958 3.95833 4.09375 3.43750 4.09375  c
3.06250 4.09375 2.66927 4.15625 2.25781 4.28125  c
1.84635 4.40625 1.40625 4.60417 .937500 4.87500  c
.937500 3.67188 l
1.41667 3.48438 1.86198 3.34115 2.27344 3.24219  c
2.68490 3.14323 3.06250 3.09375 3.40625 3.09375  c
4.31250 3.09375 5.03646 3.32031 5.57812 3.77344  c
6.11979 4.22656 6.39062 4.83333 6.39062 5.59375  c
6.39062 5.94792 6.32292 6.28646 6.18750 6.60938  c
6.05208 6.93229 5.80729 7.31250 5.45312 7.75000  c
5.34896 7.86458 5.03646 8.19271 4.51562 8.73438  c
3.99479 9.27604 3.25521 10.0312 2.29688 11.0000  c
h
13.2754 4.68750 m
11.1816 5.82812 l
13.2754 6.96875 l
12.9316 7.54688 l
10.9629 6.35938 l
10.9629 8.56250 l
10.3066 8.56250 l
10.3066 6.35938 l
8.33789 7.54688 l
7.99414 6.96875 l
10.1035 5.82812 l
7.99414 4.68750 l
8.33789 4.10938 l
10.3066 5.29688 l
10.3066 3.09375 l
10.9629 3.09375 l
10.9629 5.29688 l
12.9316 4.10938 l
13.2754 4.68750 l
h
20.2285 5.43750 m
17.8535 8.62500 l
20.3379 12.0000 l
19.0723 12.0000 l
17.1660 9.42188 l
15.2598 12.0000 l
13.9785 12.0000 l
16.5254 8.56250 l
14.1973 5.43750 l
15.4629 5.43750 l
17.2129 7.78125 l
18.9473 5.43750 l
20.2285 5.43750 l
h
21.3301 8.23438 m
24.4863 8.23438 l
24.4863 9.18750 l
21.3301 9.18750 l
21.3301 8.23438 l
h
28.9258 12.6094 m
28.6237 13.3906 28.3268 13.9010 28.0352 14.1406  c
27.7435 14.3802 27.3581 14.5000 26.8789 14.5000  c
26.0195 14.5000 l
26.0195 13.5938 l
26.6445 13.5938 l
26.9466 13.5938 27.1784 13.5234 27.3398 13.3828  c
27.5013 13.2422 27.6810 12.9115 27.8789 12.3906  c
28.0820 11.8906 l
25.4258 5.43750 l
26.5664 5.43750 l
28.6133 10.5625 l
30.6758 5.43750 l
31.8164 5.43750 l
28.9258 12.6094 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -96.0000 -206.000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 170.000 206.000 ] concat
newpath
6.59375 5.43750 m
4.21875 8.62500 l
6.70312 12.0000 l
5.43750 12.0000 l
3.53125 9.42188 l
1.62500 12.0000 l
.343750 12.0000 l
2.89062 8.56250 l
.562500 5.43750 l
1.82812 5.43750 l
3.57812 7.78125 l
5.31250 5.43750 l
6.59375 5.43750 l
h
12.6172 4.46875 m
12.6172 7.73438 l
15.8828 7.73438 l
15.8828 8.73438 l
12.6172 8.73438 l
12.6172 12.0000 l
11.6328 12.0000 l
11.6328 8.73438 l
8.36719 8.73438 l
8.36719 7.73438 l
11.6328 7.73438 l
11.6328 4.46875 l
12.6172 4.46875 l
h
21.0156 12.6094 m
20.7135 13.3906 20.4167 13.9010 20.1250 14.1406  c
19.8333 14.3802 19.4479 14.5000 18.9688 14.5000  c
18.1094 14.5000 l
18.1094 13.5938 l
18.7344 13.5938 l
19.0365 13.5938 19.2682 13.5234 19.4297 13.3828  c
19.5911 13.2422 19.7708 12.9115 19.9688 12.3906  c
20.1719 11.8906 l
17.5156 5.43750 l
18.6562 5.43750 l
20.7031 10.5625 l
22.7656 5.43750 l
23.9062 5.43750 l
21.0156 12.6094 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -170.000 -206.000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 207.000 206.000 ] concat
newpath
6.59375 5.43750 m
4.21875 8.62500 l
6.70312 12.0000 l
5.43750 12.0000 l
3.53125 9.42188 l
1.62500 12.0000 l
.343750 12.0000 l
2.89062 8.56250 l
.562500 5.43750 l
1.82812 5.43750 l
3.57812 7.78125 l
5.31250 5.43750 l
6.59375 5.43750 l
h
12.6172 4.46875 m
12.6172 7.73438 l
15.8828 7.73438 l
15.8828 8.73438 l
12.6172 8.73438 l
12.6172 12.0000 l
11.6328 12.0000 l
11.6328 8.73438 l
8.36719 8.73438 l
8.36719 7.73438 l
11.6328 7.73438 l
11.6328 4.46875 l
12.6172 4.46875 l
h
21.0156 12.6094 m
20.7135 13.3906 20.4167 13.9010 20.1250 14.1406  c
19.8333 14.3802 19.4479 14.5000 18.9688 14.5000  c
18.1094 14.5000 l
18.1094 13.5938 l
18.7344 13.5938 l
19.0365 13.5938 19.2682 13.5234 19.4297 13.3828  c
19.5911 13.2422 19.7708 12.9115 19.9688 12.3906  c
20.1719 11.8906 l
17.5156 5.43750 l
18.6562 5.43750 l
20.7031 10.5625 l
22.7656 5.43750 l
23.9062 5.43750 l
21.0156 12.6094 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -207.000 -206.000 ] concat
.439216 .858824 .576471 RG
newpath
368.000 126.000 m
368.000 131.523 363.523 136.000 358.000 136.000  c
352.477 136.000 348.000 131.523 348.000 126.000  c
348.000 120.477 352.477 116.000 358.000 116.000  c
363.523 116.000 368.000 120.477 368.000 126.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
368.000 126.000 m
368.000 131.523 363.523 136.000 358.000 136.000  c
352.477 136.000 348.000 131.523 348.000 126.000  c
348.000 120.477 352.477 116.000 358.000 116.000  c
363.523 116.000 368.000 120.477 368.000 126.000  c
h
S
.439216 .858824 .576471 RG
newpath
430.000 126.000 m
430.000 131.523 425.523 136.000 420.000 136.000  c
414.477 136.000 410.000 131.523 410.000 126.000  c
410.000 120.477 414.477 116.000 420.000 116.000  c
425.523 116.000 430.000 120.477 430.000 126.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
430.000 126.000 m
430.000 131.523 425.523 136.000 420.000 136.000  c
414.477 136.000 410.000 131.523 410.000 126.000  c
410.000 120.477 414.477 116.000 420.000 116.000  c
425.523 116.000 430.000 120.477 430.000 126.000  c
h
S
.439216 .858824 .576471 RG
newpath
409.000 177.000 m
433.000 177.000 l
433.000 193.000 l
409.000 193.000 l
409.000 177.000 l
h
f
0.00000 0.00000 0.00000 RG
newpath
409.000 177.000 m
433.000 177.000 l
433.000 193.000 l
409.000 193.000 l
409.000 177.000 l
h
S
.439216 .858824 .576471 RG
0.00000 0.00000 0.00000 RG
newpath
365.000 133.000 m
365.000 133.000 l
412.000 177.000 l
S
newpath
412.000 177.000 m
409.000 170.000 l
407.000 172.000 l
405.000 175.000 l
h
f
newpath
412.000 177.000 m
409.000 170.000 l
407.000 172.000 l
405.000 175.000 l
h
S
.439216 .858824 .576471 RG
0.00000 0.00000 0.00000 RG
newpath
420.000 136.000 m
420.000 136.000 l
420.000 177.000 l
S
newpath
420.000 177.000 m
423.000 170.000 l
420.000 169.000 l
417.000 170.000 l
h
f
newpath
420.000 177.000 m
423.000 170.000 l
420.000 169.000 l
417.000 170.000 l
h
S
[ 1.00000 0.00000 0.00000 1.00000 372.000 146.000 ] concat
newpath
6.59375 5.43750 m
4.21875 8.62500 l
6.70312 12.0000 l
5.43750 12.0000 l
3.53125 9.42188 l
1.62500 12.0000 l
.343750 12.0000 l
2.89062 8.56250 l
.562500 5.43750 l
1.82812 5.43750 l
3.57812 7.78125 l
5.31250 5.43750 l
6.59375 5.43750 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -372.000 -146.000 ] concat
.439216 .858824 .576471 RG
newpath
490.000 127.000 m
490.000 132.523 485.523 137.000 480.000 137.000  c
474.477 137.000 470.000 132.523 470.000 127.000  c
470.000 121.477 474.477 117.000 480.000 117.000  c
485.523 117.000 490.000 121.477 490.000 127.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
490.000 127.000 m
490.000 132.523 485.523 137.000 480.000 137.000  c
474.477 137.000 470.000 132.523 470.000 127.000  c
470.000 121.477 474.477 117.000 480.000 117.000  c
485.523 117.000 490.000 121.477 490.000 127.000  c
h
S
.439216 .858824 .576471 RG
0.00000 0.00000 0.00000 RG
newpath
474.000 134.000 m
474.000 134.000 l
429.000 177.000 l
S
newpath
429.000 177.000 m
436.000 175.000 l
434.000 172.000 l
432.000 170.000 l
h
f
newpath
429.000 177.000 m
436.000 175.000 l
434.000 172.000 l
432.000 170.000 l
h
S
[ 1.00000 0.00000 0.00000 1.00000 426.000 146.000 ] concat
newpath
3.85938 12.6094 m
3.55729 13.3906 3.26042 13.9010 2.96875 14.1406  c
2.67708 14.3802 2.29167 14.5000 1.81250 14.5000  c
.953125 14.5000 l
.953125 13.5938 l
1.57812 13.5938 l
1.88021 13.5938 2.11198 13.5234 2.27344 13.3828  c
2.43490 13.2422 2.61458 12.9115 2.81250 12.3906  c
3.01562 11.8906 l
.359375 5.43750 l
1.50000 5.43750 l
3.54688 10.5625 l
5.60938 5.43750 l
6.75000 5.43750 l
3.85938 12.6094 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -426.000 -146.000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 468.000 146.000 ] concat
newpath
.656250 5.43750 m
5.78125 5.43750 l
5.78125 6.42188 l
1.73438 11.1406 l
5.78125 11.1406 l
5.78125 12.0000 l
.515625 12.0000 l
.515625 11.0156 l
4.57812 6.29688 l
.656250 6.29688 l
.656250 5.43750 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -468.000 -146.000 ] concat
.439216 .858824 .576471 RG
newpath
368.000 244.000 m
368.000 249.523 363.523 254.000 358.000 254.000  c
352.477 254.000 348.000 249.523 348.000 244.000  c
348.000 238.477 352.477 234.000 358.000 234.000  c
363.523 234.000 368.000 238.477 368.000 244.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
368.000 244.000 m
368.000 249.523 363.523 254.000 358.000 254.000  c
352.477 254.000 348.000 249.523 348.000 244.000  c
348.000 238.477 352.477 234.000 358.000 234.000  c
363.523 234.000 368.000 238.477 368.000 244.000  c
h
S
.439216 .858824 .576471 RG
newpath
490.000 245.000 m
490.000 250.523 485.523 255.000 480.000 255.000  c
474.477 255.000 470.000 250.523 470.000 245.000  c
470.000 239.477 474.477 235.000 480.000 235.000  c
485.523 235.000 490.000 239.477 490.000 245.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
490.000 245.000 m
490.000 250.523 485.523 255.000 480.000 255.000  c
474.477 255.000 470.000 250.523 470.000 245.000  c
470.000 239.477 474.477 235.000 480.000 235.000  c
485.523 235.000 490.000 239.477 490.000 245.000  c
h
S
.439216 .858824 .576471 RG
newpath
430.000 244.000 m
430.000 249.523 425.523 254.000 420.000 254.000  c
414.477 254.000 410.000 249.523 410.000 244.000  c
410.000 238.477 414.477 234.000 420.000 234.000  c
425.523 234.000 430.000 238.477 430.000 244.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
430.000 244.000 m
430.000 249.523 425.523 254.000 420.000 254.000  c
414.477 254.000 410.000 249.523 410.000 244.000  c
410.000 238.477 414.477 234.000 420.000 234.000  c
425.523 234.000 430.000 238.477 430.000 244.000  c
h
S
.439216 .858824 .576471 RG
0.00000 0.00000 0.00000 RG
newpath
412.000 193.000 m
412.000 193.000 l
365.000 238.000 l
S
newpath
365.000 238.000 m
372.000 236.000 l
370.000 233.000 l
368.000 231.000 l
h
f
newpath
365.000 238.000 m
372.000 236.000 l
370.000 233.000 l
368.000 231.000 l
h
S
.439216 .858824 .576471 RG
0.00000 0.00000 0.00000 RG
newpath
420.000 193.000 m
420.000 193.000 l
420.000 235.000 l
S
newpath
420.000 235.000 m
423.000 228.000 l
420.000 227.000 l
417.000 228.000 l
h
f
newpath
420.000 235.000 m
423.000 228.000 l
420.000 227.000 l
417.000 228.000 l
h
S
.439216 .858824 .576471 RG
0.00000 0.00000 0.00000 RG
newpath
428.000 193.000 m
428.000 193.000 l
474.000 239.000 l
S
newpath
474.000 239.000 m
471.000 232.000 l
469.000 234.000 l
467.000 236.000 l
h
f
newpath
474.000 239.000 m
471.000 232.000 l
469.000 234.000 l
467.000 236.000 l
h
S
[ 1.00000 0.00000 0.00000 1.00000 347.000 207.000 ] concat
newpath
2.29688 11.0000 m
6.43750 11.0000 l
6.43750 12.0000 l
.875000 12.0000 l
.875000 11.0000 l
1.32292 10.5417 1.93490 9.91927 2.71094 9.13281  c
3.48698 8.34635 3.97396 7.83854 4.17188 7.60938  c
4.55729 7.19271 4.82552 6.83594 4.97656 6.53906  c
5.12760 6.24219 5.20312 5.95312 5.20312 5.67188  c
5.20312 5.20312 5.03906 4.82292 4.71094 4.53125  c
4.38281 4.23958 3.95833 4.09375 3.43750 4.09375  c
3.06250 4.09375 2.66927 4.15625 2.25781 4.28125  c
1.84635 4.40625 1.40625 4.60417 .937500 4.87500  c
.937500 3.67188 l
1.41667 3.48438 1.86198 3.34115 2.27344 3.24219  c
2.68490 3.14323 3.06250 3.09375 3.40625 3.09375  c
4.31250 3.09375 5.03646 3.32031 5.57812 3.77344  c
6.11979 4.22656 6.39062 4.83333 6.39062 5.59375  c
6.39062 5.94792 6.32292 6.28646 6.18750 6.60938  c
6.05208 6.93229 5.80729 7.31250 5.45312 7.75000  c
5.34896 7.86458 5.03646 8.19271 4.51562 8.73438  c
3.99479 9.27604 3.25521 10.0312 2.29688 11.0000  c
h
13.2754 4.68750 m
11.1816 5.82812 l
13.2754 6.96875 l
12.9316 7.54688 l
10.9629 6.35938 l
10.9629 8.56250 l
10.3066 8.56250 l
10.3066 6.35938 l
8.33789 7.54688 l
7.99414 6.96875 l
10.1035 5.82812 l
7.99414 4.68750 l
8.33789 4.10938 l
10.3066 5.29688 l
10.3066 3.09375 l
10.9629 3.09375 l
10.9629 5.29688 l
12.9316 4.10938 l
13.2754 4.68750 l
h
20.2285 5.43750 m
17.8535 8.62500 l
20.3379 12.0000 l
19.0723 12.0000 l
17.1660 9.42188 l
15.2598 12.0000 l
13.9785 12.0000 l
16.5254 8.56250 l
14.1973 5.43750 l
15.4629 5.43750 l
17.2129 7.78125 l
18.9473 5.43750 l
20.2285 5.43750 l
h
21.3301 8.23438 m
24.4863 8.23438 l
24.4863 9.18750 l
21.3301 9.18750 l
21.3301 8.23438 l
h
28.9258 12.6094 m
28.6237 13.3906 28.3268 13.9010 28.0352 14.1406  c
27.7435 14.3802 27.3581 14.5000 26.8789 14.5000  c
26.0195 14.5000 l
26.0195 13.5938 l
26.6445 13.5938 l
26.9466 13.5938 27.1784 13.5234 27.3398 13.3828  c
27.5013 13.2422 27.6810 12.9115 27.8789 12.3906  c
28.0820 11.8906 l
25.4258 5.43750 l
26.5664 5.43750 l
28.6133 10.5625 l
30.6758 5.43750 l
31.8164 5.43750 l
28.9258 12.6094 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -347.000 -207.000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 430.000 207.000 ] concat
newpath
.656250 5.43750 m
5.78125 5.43750 l
5.78125 6.42188 l
1.73438 11.1406 l
5.78125 11.1406 l
5.78125 12.0000 l
.515625 12.0000 l
.515625 11.0156 l
4.57812 6.29688 l
.656250 6.29688 l
.656250 5.43750 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -430.000 -207.000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 465.000 206.000 ] concat
newpath
.656250 5.43750 m
5.78125 5.43750 l
5.78125 6.42188 l
1.73438 11.1406 l
5.78125 11.1406 l
5.78125 12.0000 l
.515625 12.0000 l
.515625 11.0156 l
4.57812 6.29688 l
.656250 6.29688 l
.656250 5.43750 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -465.000 -206.000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 437.000 176.000 ] concat
newpath
.656250 5.43750 m
5.78125 5.43750 l
5.78125 6.42188 l
1.73438 11.1406 l
5.78125 11.1406 l
5.78125 12.0000 l
.515625 12.0000 l
.515625 11.0156 l
4.57812 6.29688 l
.656250 6.29688 l
.656250 5.43750 l
h
7.56445 6.54688 m
15.0801 6.54688 l
15.0801 7.53125 l
7.56445 7.53125 l
7.56445 6.54688 l
h
7.56445 8.93750 m
15.0801 8.93750 l
15.0801 9.93750 l
7.56445 9.93750 l
7.56445 8.93750 l
h
22.9473 5.43750 m
20.5723 8.62500 l
23.0566 12.0000 l
21.7910 12.0000 l
19.8848 9.42188 l
17.9785 12.0000 l
16.6973 12.0000 l
19.2441 8.56250 l
16.9160 5.43750 l
18.1816 5.43750 l
19.9316 7.78125 l
21.6660 5.43750 l
22.9473 5.43750 l
h
28.9707 4.46875 m
28.9707 7.73438 l
32.2363 7.73438 l
32.2363 8.73438 l
28.9707 8.73438 l
28.9707 12.0000 l
27.9863 12.0000 l
27.9863 8.73438 l
24.7207 8.73438 l
24.7207 7.73438 l
27.9863 7.73438 l
27.9863 4.46875 l
28.9707 4.46875 l
h
37.3691 12.6094 m
37.0671 13.3906 36.7702 13.9010 36.4785 14.1406  c
36.1868 14.3802 35.8014 14.5000 35.3223 14.5000  c
34.4629 14.5000 l
34.4629 13.5938 l
35.0879 13.5938 l
35.3900 13.5938 35.6217 13.5234 35.7832 13.3828  c
35.9447 13.2422 36.1243 12.9115 36.3223 12.3906  c
36.5254 11.8906 l
33.8691 5.43750 l
35.0098 5.43750 l
37.0566 10.5625 l
39.1191 5.43750 l
40.2598 5.43750 l
37.3691 12.6094 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -437.000 -176.000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 100.000 94.0000 ] concat
newpath
2.29688 11.0000 m
6.43750 11.0000 l
6.43750 12.0000 l
.875000 12.0000 l
.875000 11.0000 l
1.32292 10.5417 1.93490 9.91927 2.71094 9.13281  c
3.48698 8.34635 3.97396 7.83854 4.17188 7.60938  c
4.55729 7.19271 4.82552 6.83594 4.97656 6.53906  c
5.12760 6.24219 5.20312 5.95312 5.20312 5.67188  c
5.20312 5.20312 5.03906 4.82292 4.71094 4.53125  c
4.38281 4.23958 3.95833 4.09375 3.43750 4.09375  c
3.06250 4.09375 2.66927 4.15625 2.25781 4.28125  c
1.84635 4.40625 1.40625 4.60417 .937500 4.87500  c
.937500 3.67188 l
1.41667 3.48438 1.86198 3.34115 2.27344 3.24219  c
2.68490 3.14323 3.06250 3.09375 3.40625 3.09375  c
4.31250 3.09375 5.03646 3.32031 5.57812 3.77344  c
6.11979 4.22656 6.39062 4.83333 6.39062 5.59375  c
6.39062 5.94792 6.32292 6.28646 6.18750 6.60938  c
6.05208 6.93229 5.80729 7.31250 5.45312 7.75000  c
5.34896 7.86458 5.03646 8.19271 4.51562 8.73438  c
3.99479 9.27604 3.25521 10.0312 2.29688 11.0000  c
h
9.93164 11.0000 m
14.0723 11.0000 l
14.0723 12.0000 l
8.50977 12.0000 l
8.50977 11.0000 l
8.95768 10.5417 9.56966 9.91927 10.3457 9.13281  c
11.1217 8.34635 11.6087 7.83854 11.8066 7.60938  c
12.1921 7.19271 12.4603 6.83594 12.6113 6.53906  c
12.7624 6.24219 12.8379 5.95312 12.8379 5.67188  c
12.8379 5.20312 12.6738 4.82292 12.3457 4.53125  c
12.0176 4.23958 11.5931 4.09375 11.0723 4.09375  c
10.6973 4.09375 10.3040 4.15625 9.89258 4.28125  c
9.48112 4.40625 9.04102 4.60417 8.57227 4.87500  c
8.57227 3.67188 l
9.05143 3.48438 9.49674 3.34115 9.90820 3.24219  c
10.3197 3.14323 10.6973 3.09375 11.0410 3.09375  c
11.9473 3.09375 12.6712 3.32031 13.2129 3.77344  c
13.7546 4.22656 14.0254 4.83333 14.0254 5.59375  c
14.0254 5.94792 13.9577 6.28646 13.8223 6.60938  c
13.6868 6.93229 13.4421 7.31250 13.0879 7.75000  c
12.9837 7.86458 12.6712 8.19271 12.1504 8.73438  c
11.6296 9.27604 10.8900 10.0312 9.93164 11.0000  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -100.000 -94.0000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 164.000 95.0000 ] concat
newpath
2.29688 11.0000 m
6.43750 11.0000 l
6.43750 12.0000 l
.875000 12.0000 l
.875000 11.0000 l
1.32292 10.5417 1.93490 9.91927 2.71094 9.13281  c
3.48698 8.34635 3.97396 7.83854 4.17188 7.60938  c
4.55729 7.19271 4.82552 6.83594 4.97656 6.53906  c
5.12760 6.24219 5.20312 5.95312 5.20312 5.67188  c
5.20312 5.20312 5.03906 4.82292 4.71094 4.53125  c
4.38281 4.23958 3.95833 4.09375 3.43750 4.09375  c
3.06250 4.09375 2.66927 4.15625 2.25781 4.28125  c
1.84635 4.40625 1.40625 4.60417 .937500 4.87500  c
.937500 3.67188 l
1.41667 3.48438 1.86198 3.34115 2.27344 3.24219  c
2.68490 3.14323 3.06250 3.09375 3.40625 3.09375  c
4.31250 3.09375 5.03646 3.32031 5.57812 3.77344  c
6.11979 4.22656 6.39062 4.83333 6.39062 5.59375  c
6.39062 5.94792 6.32292 6.28646 6.18750 6.60938  c
6.05208 6.93229 5.80729 7.31250 5.45312 7.75000  c
5.34896 7.86458 5.03646 8.19271 4.51562 8.73438  c
3.99479 9.27604 3.25521 10.0312 2.29688 11.0000  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -164.000 -95.0000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 222.000 95.0000 ] concat
newpath
2.29688 11.0000 m
6.43750 11.0000 l
6.43750 12.0000 l
.875000 12.0000 l
.875000 11.0000 l
1.32292 10.5417 1.93490 9.91927 2.71094 9.13281  c
3.48698 8.34635 3.97396 7.83854 4.17188 7.60938  c
4.55729 7.19271 4.82552 6.83594 4.97656 6.53906  c
5.12760 6.24219 5.20312 5.95312 5.20312 5.67188  c
5.20312 5.20312 5.03906 4.82292 4.71094 4.53125  c
4.38281 4.23958 3.95833 4.09375 3.43750 4.09375  c
3.06250 4.09375 2.66927 4.15625 2.25781 4.28125  c
1.84635 4.40625 1.40625 4.60417 .937500 4.87500  c
.937500 3.67188 l
1.41667 3.48438 1.86198 3.34115 2.27344 3.24219  c
2.68490 3.14323 3.06250 3.09375 3.40625 3.09375  c
4.31250 3.09375 5.03646 3.32031 5.57812 3.77344  c
6.11979 4.22656 6.39062 4.83333 6.39062 5.59375  c
6.39062 5.94792 6.32292 6.28646 6.18750 6.60938  c
6.05208 6.93229 5.80729 7.31250 5.45312 7.75000  c
5.34896 7.86458 5.03646 8.19271 4.51562 8.73438  c
3.99479 9.27604 3.25521 10.0312 2.29688 11.0000  c
h
12.1660 4.28125 m
9.18164 8.95312 l
12.1660 8.95312 l
12.1660 4.28125 l
h
11.8535 3.25000 m
13.3535 3.25000 l
13.3535 8.95312 l
14.6035 8.95312 l
14.6035 9.93750 l
13.3535 9.93750 l
13.3535 12.0000 l
12.1660 12.0000 l
12.1660 9.93750 l
8.22852 9.93750 l
8.22852 8.79688 l
11.8535 3.25000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -222.000 -95.0000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 239.000 102.000 ] concat
newpath
2.29688 11.0000 m
6.43750 11.0000 l
6.43750 12.0000 l
.875000 12.0000 l
.875000 11.0000 l
1.32292 10.5417 1.93490 9.91927 2.71094 9.13281  c
3.48698 8.34635 3.97396 7.83854 4.17188 7.60938  c
4.55729 7.19271 4.82552 6.83594 4.97656 6.53906  c
5.12760 6.24219 5.20312 5.95312 5.20312 5.67188  c
5.20312 5.20312 5.03906 4.82292 4.71094 4.53125  c
4.38281 4.23958 3.95833 4.09375 3.43750 4.09375  c
3.06250 4.09375 2.66927 4.15625 2.25781 4.28125  c
1.84635 4.40625 1.40625 4.60417 .937500 4.87500  c
.937500 3.67188 l
1.41667 3.48438 1.86198 3.34115 2.27344 3.24219  c
2.68490 3.14323 3.06250 3.09375 3.40625 3.09375  c
4.31250 3.09375 5.03646 3.32031 5.57812 3.77344  c
6.11979 4.22656 6.39062 4.83333 6.39062 5.59375  c
6.39062 5.94792 6.32292 6.28646 6.18750 6.60938  c
6.05208 6.93229 5.80729 7.31250 5.45312 7.75000  c
5.34896 7.86458 5.03646 8.19271 4.51562 8.73438  c
3.99479 9.27604 3.25521 10.0312 2.29688 11.0000  c
h
8.93164 3.25000 m
13.5723 3.25000 l
13.5723 4.25000 l
10.0098 4.25000 l
10.0098 6.39062 l
10.1868 6.32812 10.3613 6.28385 10.5332 6.25781  c
10.7051 6.23177 10.8743 6.21875 11.0410 6.21875  c
12.0202 6.21875 12.7962 6.48698 13.3691 7.02344  c
13.9421 7.55990 14.2285 8.28125 14.2285 9.18750  c
14.2285 10.1354 13.9342 10.8698 13.3457 11.3906  c
12.7572 11.9115 11.9316 12.1719 10.8691 12.1719  c
10.4941 12.1719 10.1165 12.1406 9.73633 12.0781  c
9.35612 12.0156 8.96289 11.9219 8.55664 11.7969  c
8.55664 10.6094 l
8.91081 10.7969 9.27539 10.9375 9.65039 11.0312  c
10.0254 11.1250 10.4212 11.1719 10.8379 11.1719  c
11.5150 11.1719 12.0514 10.9948 12.4473 10.6406  c
12.8431 10.2865 13.0410 9.80208 13.0410 9.18750  c
13.0410 8.58333 12.8431 8.10417 12.4473 7.75000  c
12.0514 7.39583 11.5150 7.21875 10.8379 7.21875  c
10.5254 7.21875 10.2103 7.25260 9.89258 7.32031  c
9.57487 7.38802 9.25456 7.49479 8.93164 7.64062  c
8.93164 3.25000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -239.000 -102.000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 176.000 104.000 ] concat
newpath
1.48438 11.0000 m
3.42188 11.0000 l
3.42188 4.32812 l
1.31250 4.75000 l
1.31250 3.67188 l
3.40625 3.25000 l
4.59375 3.25000 l
4.59375 11.0000 l
6.53125 11.0000 l
6.53125 12.0000 l
1.48438 12.0000 l
1.48438 11.0000 l
h
11.4473 4.03125 m
10.8431 4.03125 10.3874 4.33073 10.0801 4.92969  c
9.77279 5.52865 9.61914 6.43229 9.61914 7.64062  c
9.61914 8.83854 9.77279 9.73698 10.0801 10.3359  c
10.3874 10.9349 10.8431 11.2344 11.4473 11.2344  c
12.0618 11.2344 12.5228 10.9349 12.8301 10.3359  c
13.1374 9.73698 13.2910 8.83854 13.2910 7.64062  c
13.2910 6.43229 13.1374 5.52865 12.8301 4.92969  c
12.5228 4.33073 12.0618 4.03125 11.4473 4.03125  c
h
11.4473 3.09375 m
12.4264 3.09375 13.1764 3.48177 13.6973 4.25781  c
14.2181 5.03385 14.4785 6.16146 14.4785 7.64062  c
14.4785 9.10938 14.2181 10.2318 13.6973 11.0078  c
13.1764 11.7839 12.4264 12.1719 11.4473 12.1719  c
10.4681 12.1719 9.72070 11.7839 9.20508 11.0078  c
8.68945 10.2318 8.43164 9.10938 8.43164 7.64062  c
8.43164 6.16146 8.68945 5.03385 9.20508 4.25781  c
9.72070 3.48177 10.4681 3.09375 11.4473 3.09375  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -176.000 -104.000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 351.000 97.0000 ] concat
newpath
2.29688 11.0000 m
6.43750 11.0000 l
6.43750 12.0000 l
.875000 12.0000 l
.875000 11.0000 l
1.32292 10.5417 1.93490 9.91927 2.71094 9.13281  c
3.48698 8.34635 3.97396 7.83854 4.17188 7.60938  c
4.55729 7.19271 4.82552 6.83594 4.97656 6.53906  c
5.12760 6.24219 5.20312 5.95312 5.20312 5.67188  c
5.20312 5.20312 5.03906 4.82292 4.71094 4.53125  c
4.38281 4.23958 3.95833 4.09375 3.43750 4.09375  c
3.06250 4.09375 2.66927 4.15625 2.25781 4.28125  c
1.84635 4.40625 1.40625 4.60417 .937500 4.87500  c
.937500 3.67188 l
1.41667 3.48438 1.86198 3.34115 2.27344 3.24219  c
2.68490 3.14323 3.06250 3.09375 3.40625 3.09375  c
4.31250 3.09375 5.03646 3.32031 5.57812 3.77344  c
6.11979 4.22656 6.39062 4.83333 6.39062 5.59375  c
6.39062 5.94792 6.32292 6.28646 6.18750 6.60938  c
6.05208 6.93229 5.80729 7.31250 5.45312 7.75000  c
5.34896 7.86458 5.03646 8.19271 4.51562 8.73438  c
3.99479 9.27604 3.25521 10.0312 2.29688 11.0000  c
h
9.93164 11.0000 m
14.0723 11.0000 l
14.0723 12.0000 l
8.50977 12.0000 l
8.50977 11.0000 l
8.95768 10.5417 9.56966 9.91927 10.3457 9.13281  c
11.1217 8.34635 11.6087 7.83854 11.8066 7.60938  c
12.1921 7.19271 12.4603 6.83594 12.6113 6.53906  c
12.7624 6.24219 12.8379 5.95312 12.8379 5.67188  c
12.8379 5.20312 12.6738 4.82292 12.3457 4.53125  c
12.0176 4.23958 11.5931 4.09375 11.0723 4.09375  c
10.6973 4.09375 10.3040 4.15625 9.89258 4.28125  c
9.48112 4.40625 9.04102 4.60417 8.57227 4.87500  c
8.57227 3.67188 l
9.05143 3.48438 9.49674 3.34115 9.90820 3.24219  c
10.3197 3.14323 10.6973 3.09375 11.0410 3.09375  c
11.9473 3.09375 12.6712 3.32031 13.2129 3.77344  c
13.7546 4.22656 14.0254 4.83333 14.0254 5.59375  c
14.0254 5.94792 13.9577 6.28646 13.8223 6.60938  c
13.6868 6.93229 13.4421 7.31250 13.0879 7.75000  c
12.9837 7.86458 12.6712 8.19271 12.1504 8.73438  c
11.6296 9.27604 10.8900 10.0312 9.93164 11.0000  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -351.000 -97.0000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 412.000 96.0000 ] concat
newpath
2.29688 11.0000 m
6.43750 11.0000 l
6.43750 12.0000 l
.875000 12.0000 l
.875000 11.0000 l
1.32292 10.5417 1.93490 9.91927 2.71094 9.13281  c
3.48698 8.34635 3.97396 7.83854 4.17188 7.60938  c
4.55729 7.19271 4.82552 6.83594 4.97656 6.53906  c
5.12760 6.24219 5.20312 5.95312 5.20312 5.67188  c
5.20312 5.20312 5.03906 4.82292 4.71094 4.53125  c
4.38281 4.23958 3.95833 4.09375 3.43750 4.09375  c
3.06250 4.09375 2.66927 4.15625 2.25781 4.28125  c
1.84635 4.40625 1.40625 4.60417 .937500 4.87500  c
.937500 3.67188 l
1.41667 3.48438 1.86198 3.34115 2.27344 3.24219  c
2.68490 3.14323 3.06250 3.09375 3.40625 3.09375  c
4.31250 3.09375 5.03646 3.32031 5.57812 3.77344  c
6.11979 4.22656 6.39062 4.83333 6.39062 5.59375  c
6.39062 5.94792 6.32292 6.28646 6.18750 6.60938  c
6.05208 6.93229 5.80729 7.31250 5.45312 7.75000  c
5.34896 7.86458 5.03646 8.19271 4.51562 8.73438  c
3.99479 9.27604 3.25521 10.0312 2.29688 11.0000  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -412.000 -96.0000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 472.000 98.0000 ] concat
newpath
2.29688 11.0000 m
6.43750 11.0000 l
6.43750 12.0000 l
.875000 12.0000 l
.875000 11.0000 l
1.32292 10.5417 1.93490 9.91927 2.71094 9.13281  c
3.48698 8.34635 3.97396 7.83854 4.17188 7.60938  c
4.55729 7.19271 4.82552 6.83594 4.97656 6.53906  c
5.12760 6.24219 5.20312 5.95312 5.20312 5.67188  c
5.20312 5.20312 5.03906 4.82292 4.71094 4.53125  c
4.38281 4.23958 3.95833 4.09375 3.43750 4.09375  c
3.06250 4.09375 2.66927 4.15625 2.25781 4.28125  c
1.84635 4.40625 1.40625 4.60417 .937500 4.87500  c
.937500 3.67188 l
1.41667 3.48438 1.86198 3.34115 2.27344 3.24219  c
2.68490 3.14323 3.06250 3.09375 3.40625 3.09375  c
4.31250 3.09375 5.03646 3.32031 5.57812 3.77344  c
6.11979 4.22656 6.39062 4.83333 6.39062 5.59375  c
6.39062 5.94792 6.32292 6.28646 6.18750 6.60938  c
6.05208 6.93229 5.80729 7.31250 5.45312 7.75000  c
5.34896 7.86458 5.03646 8.19271 4.51562 8.73438  c
3.99479 9.27604 3.25521 10.0312 2.29688 11.0000  c
h
12.1660 4.28125 m
9.18164 8.95312 l
12.1660 8.95312 l
12.1660 4.28125 l
h
11.8535 3.25000 m
13.3535 3.25000 l
13.3535 8.95312 l
14.6035 8.95312 l
14.6035 9.93750 l
13.3535 9.93750 l
13.3535 12.0000 l
12.1660 12.0000 l
12.1660 9.93750 l
8.22852 9.93750 l
8.22852 8.79688 l
11.8535 3.25000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -472.000 -98.0000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 423.000 105.000 ] concat
newpath
1.48438 11.0000 m
3.42188 11.0000 l
3.42188 4.32812 l
1.31250 4.75000 l
1.31250 3.67188 l
3.40625 3.25000 l
4.59375 3.25000 l
4.59375 11.0000 l
6.53125 11.0000 l
6.53125 12.0000 l
1.48438 12.0000 l
1.48438 11.0000 l
h
11.4473 4.03125 m
10.8431 4.03125 10.3874 4.33073 10.0801 4.92969  c
9.77279 5.52865 9.61914 6.43229 9.61914 7.64062  c
9.61914 8.83854 9.77279 9.73698 10.0801 10.3359  c
10.3874 10.9349 10.8431 11.2344 11.4473 11.2344  c
12.0618 11.2344 12.5228 10.9349 12.8301 10.3359  c
13.1374 9.73698 13.2910 8.83854 13.2910 7.64062  c
13.2910 6.43229 13.1374 5.52865 12.8301 4.92969  c
12.5228 4.33073 12.0618 4.03125 11.4473 4.03125  c
h
11.4473 3.09375 m
12.4264 3.09375 13.1764 3.48177 13.6973 4.25781  c
14.2181 5.03385 14.4785 6.16146 14.4785 7.64062  c
14.4785 9.10938 14.2181 10.2318 13.6973 11.0078  c
13.1764 11.7839 12.4264 12.1719 11.4473 12.1719  c
10.4681 12.1719 9.72070 11.7839 9.20508 11.0078  c
8.68945 10.2318 8.43164 9.10938 8.43164 7.64062  c
8.43164 6.16146 8.68945 5.03385 9.20508 4.25781  c
9.72070 3.48177 10.4681 3.09375 11.4473 3.09375  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -423.000 -105.000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 490.000 107.000 ] concat
newpath
2.29688 11.0000 m
6.43750 11.0000 l
6.43750 12.0000 l
.875000 12.0000 l
.875000 11.0000 l
1.32292 10.5417 1.93490 9.91927 2.71094 9.13281  c
3.48698 8.34635 3.97396 7.83854 4.17188 7.60938  c
4.55729 7.19271 4.82552 6.83594 4.97656 6.53906  c
5.12760 6.24219 5.20312 5.95312 5.20312 5.67188  c
5.20312 5.20312 5.03906 4.82292 4.71094 4.53125  c
4.38281 4.23958 3.95833 4.09375 3.43750 4.09375  c
3.06250 4.09375 2.66927 4.15625 2.25781 4.28125  c
1.84635 4.40625 1.40625 4.60417 .937500 4.87500  c
.937500 3.67188 l
1.41667 3.48438 1.86198 3.34115 2.27344 3.24219  c
2.68490 3.14323 3.06250 3.09375 3.40625 3.09375  c
4.31250 3.09375 5.03646 3.32031 5.57812 3.77344  c
6.11979 4.22656 6.39062 4.83333 6.39062 5.59375  c
6.39062 5.94792 6.32292 6.28646 6.18750 6.60938  c
6.05208 6.93229 5.80729 7.31250 5.45312 7.75000  c
5.34896 7.86458 5.03646 8.19271 4.51562 8.73438  c
3.99479 9.27604 3.25521 10.0312 2.29688 11.0000  c
h
8.93164 3.25000 m
13.5723 3.25000 l
13.5723 4.25000 l
10.0098 4.25000 l
10.0098 6.39062 l
10.1868 6.32812 10.3613 6.28385 10.5332 6.25781  c
10.7051 6.23177 10.8743 6.21875 11.0410 6.21875  c
12.0202 6.21875 12.7962 6.48698 13.3691 7.02344  c
13.9421 7.55990 14.2285 8.28125 14.2285 9.18750  c
14.2285 10.1354 13.9342 10.8698 13.3457 11.3906  c
12.7572 11.9115 11.9316 12.1719 10.8691 12.1719  c
10.4941 12.1719 10.1165 12.1406 9.73633 12.0781  c
9.35612 12.0156 8.96289 11.9219 8.55664 11.7969  c
8.55664 10.6094 l
8.91081 10.7969 9.27539 10.9375 9.65039 11.0312  c
10.0254 11.1250 10.4212 11.1719 10.8379 11.1719  c
11.5150 11.1719 12.0514 10.9948 12.4473 10.6406  c
12.8431 10.2865 13.0410 9.80208 13.0410 9.18750  c
13.0410 8.58333 12.8431 8.10417 12.4473 7.75000  c
12.0514 7.39583 11.5150 7.21875 10.8379 7.21875  c
10.5254 7.21875 10.2103 7.25260 9.89258 7.32031  c
9.57487 7.38802 9.25456 7.49479 8.93164 7.64062  c
8.93164 3.25000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -490.000 -107.000 ] concat

%%Trailer
%%EOF
